@using Stok_Kontrol_API.WebUI.Areas.UserArea.Models;

@{
    ViewData["Title"] = "Index";
}

@model List<ProductCartVM>

<div class="row">

    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <strong class="card-title">Ürün Tablosu</strong>
            </div>
            <div class="card-body">


                <div class="card-body">
                    <div class="custom-tab">
                        <nav>
                            <div class="nav nav-tabs" id="nav-tab" role="tablist">

                                <a class="nav-item nav-link active" id="custom-nav-active-products-tab" data-toggle="tab" href="#custom-nav-active-products" role="tab" aria-controls="custom-nav-active-products" aria-selected="true">Sepetiniz</a>



                            </div>
                        </nav>
                        <div class="tab-content pl-3 pt-2" id="nav-tabContent">
                            <div class="tab-pane fade show active" id="#custom-nav-active-products-tab" role="tabpanel" aria-labelledby="custom-nav-active-products-tab">
                                <table id="bootstrap-data-table" class="table table-striped table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Ürün Adı</th>
                                            <th>Birim Fiyatı</th>
                                            <th>Stok Durumu</th>
                                            <th>Niktarı</th>
                                            <th>Toplam Fiyatı</th>
                                            <th>İşlemler</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @*     @foreach (ProductCartVM item in Model)
                                        {




                                        }*@
                                    </tbody>
                                </table>
                            </div>

                        </div>

                    </div>
                </div>

            </div>
            <div class="card-footer">
                <span>Ödenecek Toplam Tutar: <span id="totalAmount"></span>TL</span>
            </div>
        </div>
    </div>
</div>
@section Css{
    <link rel="stylesheet" href="~/template/assets/css/lib/datatable/dataTables.bootstrap.min.css">

    }
@section Scripts{

    <script src="~/template/assets/js/lib/data-table/datatables.min.js"></script>
    <script src="~/template/assets/js/lib/data-table/dataTables.bootstrap.min.js"></script>
    <script src="~/template/assets/js/lib/data-table/dataTables.buttons.min.js"></script>
    <script src="~/template/assets/js/init/datatables-init.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#bootstrap-data-table-export').DataTable();
        });
    </script>
    }


@*<script src="~/lib/jquery/dist/jquery.min.js"></script>*@
<script src="~/lib/jquery/dist/jquery.js"></script>

<script type="text/javascript">
    $(document).ready(function () {

        // Sayfa yüklendikten belli bir süre sonra sepetteki ürünlerimin listesi gelsin. Tabloda döndürülsün.

        setTimeout(function () { $.Cart.List() }, 500); // Burada oluşturulacak Cart fonksiyonu içindeki List fonksiyonu 500ms sonra tetiklensin.

        $.Cart = {

            List: function () {
                // Sepetteki ürünlerin listesini getirecek.

                $.getJSON("https://localhost:7262/UserArea/Cart/List", function (data) {


                    $("table tbody tr").remove(); // Tablonun içinde satır varsa sil.
                    var count = Objects.keys(data).length; // Kaç satır varsa sayısını al.
                    var totalaAmount = 0;

                    if (count > 0) {
                        $.each(data, function (key, item) {
                            // item sepetteki her bir ürün olarak düşünülebilir.

                            $("table tbdoy").append(


                                "<tr><td>" + item.ProductName + "</td><td>" + item.UnitPrice + "</td><td>" + item.Stock + "</td><td>" + item.Quantity + "</td><td>" + (item.UnitPrice * item.Quantity) + "</td><td>< a onclick = '$.Cart.Decrease(" + item.ID + ")'  class= 'btn btn-warning btn-sm' > <i class='fa fa-shopping-cart' > </i>&nbsp; Azalt</a ><a onclick = '$.Cart.Increase(" + item.ID + ")'  class= 'btn btn-success btn-sm' > <i class='fa fa-shopping-cart' > </i>&nbsp; Arttır</a ><a onclick = '$.Cart.Remove(" + item.ID + ")'  class= 'btn btn-danger btn-sm' > <i class='fa fa-shopping-cart' > </i>&nbsp; Sil</a > </td></tr >")

                            totalAmount += (item.UnitPrice * item.Quantity); // Her bir ürünün satırından gelecek sonuç ile toplam sipariş tutarımız oluşturuluyor.





                        });
                    }
                    $("#totalAmount").html(totalAmount); // totalAmount değişkenindeki değeri ID'si totalAmount olan elementin HTML'ine yazdır.


                });
            },



            Decrease: function (ID) {
                $.ajax({
                    type: "POST",
                    dataType: "JSON",
                    url: "@Url.Action("DecreaseCart","Cart")/" + ID,   // Normal bildiğimiz Action helper metodu gibi çalışır.
                    success: function (data) {
                        $.Cart.List(); // Eğer azaltma başarılı ise tekrar listeyi döndür.
                    }
                });



            },

            Increase: function (ID) {
                $.ajax({
                    type: "POST",
                    dataType: "JSON",
                    url: "@Url.Action("IncreaseCart","Cart")/" + ID,   // Normal bildiğimiz Action helper metodu gibi çalışır.
                    success: function (data) {
                        $.Cart.List(); // Eğer arttırma başarılı ise tekrar listeyi döndür.
                    }
                });



            },

            Remove: function (ID) {
                $.ajax({
                    type: "POST",
                    dataType: "JSON",
                    url: "@Url.Action("Remove","Cart")/" + ID,   // Normal bildiğimiz Action helper metodu gibi çalışır.
                    success: function (data) {
                        $.Cart.List(); // Eğer silme başarılı ise tekrar listeyi döndür.
                    }
                });



            },



        }
    })


</script>

